version: "3"
services:
  app:
    image: docker_compose/python_app:v0.2
    container_name: python_api
    build:
      context: .
      dockerfile: multistage.Dockerfile
    ports:
      - 9393:9090
    restart: always
    volumes:
      - rest-api-src:/src
    networks:
      - compose_network

  sonarqube:
    image: "sonarqube:latest"
    container_name: sonarqube
    depends_on:
      - database
    ports:
      - 9000:9000
    restart: always
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://postgresql:5432/sonarqube-db
      - SONAR_JDBC_USERNAME=admin
      - SONAR_JDBC_PASSWORD=admin
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - compose_network

  database:
    image: "postgres:latest"
    container_name: postgresql
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=sonarqube-db
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - compose_network

  jenkins:
    image: "jenkins/jenkins:lts-jdk11"
    container_name: jenkins
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - jenkins_home:/var/jenkins_home
    networks:
      - compose_network

  nexus:
    image: "sonatype/nexus3:latest"
    container_name: nexus
    ports:
      - 8081:8081
    volumes:
      - nexus-data:/nexus-data
    networks:
      - compose_network

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  postgresql_data:
  jenkins_home:
  nexus-data:
  rest-api-src:

networks:
  compose_network:
    driver: bridge
